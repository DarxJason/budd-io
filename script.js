export class mainMap extends Phaser.Scene{constructor(){super("mainMap")}preload(){this.load.tilemapTiledJSON("maps","src/assets/map.json"),this.load.image("tiles","src/assets/tiles.png"),this.load.image("player","src/assets/player.png"),this.load.image("enemy","src/assets/enemy.png"),this.load.image("glow","src/assets/glow.png")}create(){let e=this.add.tilemap("maps"),t=e.addTilesetImage("tileset","tiles"),s=e.createLayer("Map",t,0,0),i=e.createLayer("Walls",t,0,0);s.setScale(15),i.setScale(15),this.player=this.physics.add.sprite(5300,7500,"player"),this.player.setScale(.1),this.player.setDepth(1),this.player.body.setCircle(.47*this.player.width,.06*this.player.width,.05*this.player.height),this.hp=250,this.currentHp=200,this.createHpBar(),this.cursors=this.input.keyboard.createCursorKeys(),this.keys=this.input.keyboard.addKeys({w:Phaser.Input.Keyboard.KeyCodes.W,a:Phaser.Input.Keyboard.KeyCodes.A,s:Phaser.Input.Keyboard.KeyCodes.S,d:Phaser.Input.Keyboard.KeyCodes.D}),this.cameras.main.startFollow(this.player),this.cameras.main.setZoom(.85),this.minimap=this.cameras.add(10,10,150,150).setZoom(.05).setName("mini"),this.minimap.startFollow(this.player),this.minimap.setScroll(0,0),this.cameras.main.ignore(this.minimap),this.enemies=this.physics.add.group(),this.physics.add.collider(this.player,this.enemies,this.handleCollision,null,this),this.physics.add.collider(this.enemies,this.enemies),this.physics.add.collider(this.enemies,i),this.physics.add.overlap(this.player,this.enemies,this.chasePlayer,null,this),i.setCollisionBetween(15,16),this.physics.add.collider(this.player,i),this.time.addEvent({delay:2e3,callback:this.changeEnemiesDirection,callbackScope:this,loop:!0}),this.time.addEvent({delay:2500,callback:this.attemptSpawnEnemy,callbackScope:this,loop:!0})}update(){this.player.setVelocity(0),this.keys.w.isDown||this.cursors.up.isDown?this.player.setVelocityY(-130):this.keys.s.isDown||this.cursors.down.isDown?this.player.setVelocityY(130):this.player.setVelocityY(0),this.keys.a.isDown||this.cursors.left.isDown?this.player.setVelocityX(-130):this.keys.d.isDown||this.cursors.right.isDown?this.player.setVelocityX(130):this.player.setVelocityX(0),this.enemies.getChildren().forEach(e=>{let t;500>Phaser.Math.Distance.Between(this.player.x,this.player.y,e.x,e.y)?this.physics.moveToObject(e,this.player,110):e.setVelocity(50*e.wanderDirection.x,50*e.wanderDirection.y),e.glow.x=e.x,e.glow.y=e.y}),this.updateHpBar()}createHpBar(){this.hpBarContainer=document.createElement("div"),this.hpBarContainer.style.position="absolute",this.hpBarContainer.style.top="20px",this.hpBarContainer.style.right="20px",this.hpBarContainer.style.width="250px",this.hpBarContainer.style.height="30px",this.hpBarContainer.style.borderRadius="30px",this.hpBarContainer.style.backgroundColor="#000",this.hpBarContainer.style.padding="5px",this.hpBarContainer.style.boxSizing="border-box",document.body.appendChild(this.hpBarContainer),this.hpBar=document.createElement("div"),this.hpBar.style.height="100%",this.hpBar.style.width="100%",this.hpBar.style.borderRadius="30px",this.hpBar.style.backgroundColor="#ffe100",this.hpBar.style.boxSizing="border-box",this.hpBarContainer.appendChild(this.hpBar),this.updateHpBar()}updateHpBar(){let e=this.currentHp/this.hp;this.hpBar.style.width=`${100*e}%`}handleCollision(e,t){this.damageCooldown||(this.takeDamage(50),this.player.setTint(16711680),this.time.delayedCall(100,()=>{this.player.clearTint()}),this.damageCooldown=!0,this.time.delayedCall(500,()=>{this.damageCooldown=!1}))}takeDamage(e){this.currentHp=Phaser.Math.Clamp(this.currentHp-e,0,this.hp),this.smoothHpBarDecrease(),this.currentHp<=0&&this.respawnPlayer()}smoothHpBarDecrease(){let e=this.currentHp/this.hp;this.tweens.add({targets:this.hpBar,width:`${100*e}%`,duration:500,ease:"Power2"})}respawnPlayer(){this.player.setPosition(5300,7500),this.currentHp=this.hp,this.smoothHpBarDecrease()}changeDirection(e){let t=[new Phaser.Math.Vector2(1,0),new Phaser.Math.Vector2(-1,0),new Phaser.Math.Vector2(0,1),new Phaser.Math.Vector2(0,-1),new Phaser.Math.Vector2(1,1).normalize(),new Phaser.Math.Vector2(-1,-1).normalize(),new Phaser.Math.Vector2(-1,1).normalize(),new Phaser.Math.Vector2(1,-1).normalize()];e.wanderDirection=Phaser.Utils.Array.GetRandom(t)}changeEnemiesDirection(){this.enemies.getChildren().forEach(e=>{this.changeDirection(e)})}spawnEnemies(e){for(let t=0;t<e;t++){let s=Phaser.Math.Between(4e3,6e3),i=Phaser.Math.Between(6200,8e3),a=this.physics.add.sprite(s,i,"enemy");a.setScale(.3),a.setDepth(1),a.body.setCircle(.37*a.width,.13*a.width,.13*a.height),a.wanderDirection=new Phaser.Math.Vector2(0,0),this.changeDirection(a);let h=this.add.sprite(a.x,a.y,"glow");h.setScale(.7),h.setTint(16776960),h.setDepth(0),this.tweens.add({targets:h,scale:{from:.15,to:.2},duration:2e3,yoyo:!0,repeat:-1}),a.glow=h,this.tweens.add({targets:a,angle:360,duration:3e4,repeat:-1}),this.enemies.add(a)}}attemptSpawnEnemy(){1===Phaser.Math.Between(1,2)&&this.spawnEnemies(1)}}let config={type:Phaser.AUTO,width:window.innerWidth,height:window.innerHeight,pixelArt:!0,scene:mainMap,physics:{default:"arcade",arcade:{fps:60,debug:!1}}},game=new Phaser.Game(config);export default mainMap;
