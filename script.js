export class mainMap extends Phaser.Scene{constructor(){super("mainMap")}preload(){this.load.tilemapTiledJSON("maps","src/assets/map.json"),this.load.image("tiles","src/assets/tiles.png"),this.load.image("player","src/assets/player.png"),this.load.image("enemy","src/assets/enemy.png"),this.load.image("yellow_ladybug","src/assets/shineyLadybug.png"),this.load.image("glow","src/assets/glow.png"),this.load.image("petal","src/assets/petal.png"),this.load.image("squareBud","src/assets/squareBud.png")}create(){let e=this.add.tilemap("maps"),t=e.addTilesetImage("tileset","tiles"),s=e.createLayer("Map",t,0,0),i=e.createLayer("Walls",t,0,0);s.setScale(15),i.setScale(15),this.player=this.physics.add.sprite(Phaser.Math.Between(4e3,6e3),Phaser.Math.Between(6200,8e3),"player"),this.player.setScale(.075),this.player.setDepth(1),this.player.body.setCircle(.47*this.player.width,.06*this.player.width,.05*this.player.height),this.player.body.setMass(1e4),this.hp=500,this.currentHp=this.hp,this.createHpBar(),this.createPetalSlots(),this.createUtilityIcons(),this.cursors=this.input.keyboard.createCursorKeys(),this.keys=this.input.keyboard.addKeys({w:Phaser.Input.Keyboard.KeyCodes.W,a:Phaser.Input.Keyboard.KeyCodes.A,s:Phaser.Input.Keyboard.KeyCodes.S,d:Phaser.Input.Keyboard.KeyCodes.D}),this.cameras.main.startFollow(this.player),this.cameras.main.setZoom(.85),this.minimap=this.cameras.add(10,10,150,150).setZoom(.05).setName("mini"),this.minimap.startFollow(this.player),this.minimap.setScroll(0,0),this.cameras.main.ignore(this.minimap),i.setCollisionBetween(15,21),this.physics.add.collider(this.player,i),this.enemies=this.physics.add.group(),this.physics.add.collider(this.player,this.enemies,this.handleCollision,null,this),this.physics.add.collider(this.enemies,this.enemies),this.physics.add.collider(this.enemies,i),this.physics.add.overlap(this.player,this.enemies,this.chasePlayer,null,this),this.time.addEvent({delay:2e3,callback:this.changeEnemiesDirection,callbackScope:this,loop:!0}),this.time.addEvent({delay:5e3,callback:this.autoHeal,callbackScope:this,loop:!0}),this.time.addEvent({delay:2e3,callback:this.attemptSpawnEnemy,callbackScope:this,loop:!0})}update(){this.player.setVelocity(0),this.keys.w.isDown||this.cursors.up.isDown?this.player.setVelocityY(-150):this.keys.s.isDown||this.cursors.down.isDown?this.player.setVelocityY(150):this.player.setVelocityY(0),this.keys.a.isDown||this.cursors.left.isDown?this.player.setVelocityX(-150):this.keys.d.isDown||this.cursors.right.isDown?this.player.setVelocityX(150):this.player.setVelocityX(0),this.enemies.getChildren().forEach(e=>{let t;550>Phaser.Math.Distance.Between(this.player.x,this.player.y,e.x,e.y)?this.physics.moveToObject(e,this.player,125):e.setVelocity(50*e.wanderDirection.x,50*e.wanderDirection.y),e.glow.x=e.x,e.glow.y=e.y,e.healthBar.clear(),e.healthBar.fillStyle(16711680,1),e.healthBar.fillRect(e.x-20,e.y+25,40,5),e.healthBar.fillStyle(65280,1),e.healthBar.fillRect(e.x-20,e.y+25,40*(e.currentHp/e.maxHp),5),e.rarityText.setPosition(e.x,e.y-35)}),this.updateHpBar()}autoHeal(){this.currentHp<=this.hp-50&&(this.currentHp+=50)}createHpBar(){this.hpBarContainer=document.createElement("div"),this.hpBarContainer.style.position="absolute",this.hpBarContainer.style.top="20px",this.hpBarContainer.style.right="20px",this.hpBarContainer.style.width="250px",this.hpBarContainer.style.height="30px",this.hpBarContainer.style.borderRadius="30px",this.hpBarContainer.style.backgroundColor="#000",this.hpBarContainer.style.padding="5px",this.hpBarContainer.style.boxSizing="border-box",document.body.appendChild(this.hpBarContainer),this.hpBar=document.createElement("div"),this.hpBar.style.height="100%",this.hpBar.style.width="100%",this.hpBar.style.borderRadius="30px",this.hpBar.style.backgroundColor="#ffe100",this.hpBar.style.boxSizing="border-box",this.hpBarContainer.appendChild(this.hpBar),this.updateHpBar()}createBottomBoxes(){}createPetalSlots(){this.petalSlots=[];let e=document.createElement("div");e.style.position="absolute",e.style.bottom="15px",e.style.left="50%",e.style.transform="translateX(-50%)",e.style.maxWidth="100%",document.body.appendChild(e);for(let t=0;t<10;t++){let s=document.createElement("div");s.style.width="43px",s.style.height="43px",s.style.backgroundColor="#f7f3f1",s.style.display="inline-block",s.style.margin="3px 3px",s.style.borderRadius="5px",s.style.border="3px solid #ccc5c0",e.appendChild(s),this.petalSlots.push(s);let i=document.createElement("img");i.style.width="33px",i.src="src/assets/squareBud.png",i.style.padding="5px",i.style.height="33px",i.style.borderRadius="3px",i.style.backgroundColor="black",i.style.cursor="pointer",s.appendChild(i)}}createUtilityIcons(){let e=document.createElement("div");e.style.position="absolute",e.style.bottom="5px",e.style.left="10px",e.style.display="flex",e.style.flexDirection="column",e.style.alignItems="flex-start",document.body.appendChild(e),[{BOXborder:"#4981b1",BGcolor:"#5a9fdb",color:"#5a9fdb",border:"4px solid #4981b1",key:"(C)",image:"src/assets/crafting.svg",content:"Crafting"}].forEach((t,s)=>{let i=document.createElement("div");i.style.width="43px",i.style.height="43px",i.style.backgroundColor=t.color,i.style.margin="3px 0",i.style.borderRadius="5px",i.style.border=t.border,i.style.position="relative",i.style.cursor="pointer",e.appendChild(i);let a=document.createElement("img");a.src=t.image,a.style.width="100%",a.style.height="100%",a.style.borderRadius="3px",i.appendChild(a),i.addEventListener("click",()=>{this.scene.start("crafting")});let r=document.createElement("div");r.style.position="absolute",r.style.bottom="100%",r.style.left="50%",r.style.transform="translateX(-50%)",r.style.marginBottom="5px",r.style.padding="5px 10px",r.style.backgroundColor="#000",r.style.color="#fff",r.style.borderRadius="5px",r.style.fontSize="12px",r.style.whiteSpace="nowrap",r.style.visibility="hidden",r.style.opacity="0",r.style.transition="opacity 0.3s",r.innerHTML=`${t.key} ${t.content}`,i.appendChild(r),i.addEventListener("mouseover",()=>{r.style.visibility="visible",r.style.opacity="1"}),i.addEventListener("mouseout",()=>{r.style.visibility="hidden",r.style.opacity="0"});let l=document.createElement("div");l.style.position="absolute",l.style.bottom="0",l.style.right="0",l.style.fontSize="10px",l.style.backgroundColor=t.BGcolor,l.style.color="#fff",l.style.padding="2px 4px",l.style.borderRadius="3px",l.style.border=t.BOXborder,l.innerHTML=t.key,i.appendChild(l)})}updateHpBar(){let e=this.currentHp/this.hp;this.hpBar.style.width=`${100*e}%`}handleCollision(e,t){this.damageCooldown||(this.takeDamage(t.damageDelt),this.player.setTint(16711680),this.time.delayedCall(100,()=>{this.player.clearTint()}),this.damageCooldown=!0,this.time.delayedCall(500,()=>{this.damageCooldown=!1})),t.damageCooldown||(this.damageEnemy(t,5),t.setTint(16711680),this.time.delayedCall(100,()=>{t.clearTint()}),t.damageCooldown=!0,this.time.delayedCall(500,()=>{t.damageCooldown=!1}))}takeDamage(e){this.currentHp=Phaser.Math.Clamp(this.currentHp-e,0,this.hp),this.smoothHpBarDecrease(),this.currentHp<=0&&this.playerDied()}damageEnemy(e,t){e.currentHp=Phaser.Math.Clamp(e.currentHp-t,0,e.maxHp),e.currentHp<=0&&this.enemyDied(e)}enemyDied(e){e.rarityText.destroy(),e.glow.destroy(),e.healthBar.destroy(),e.destroy()}smoothHpBarDecrease(){this.tweens.addCounter({from:this.hpBar.clientWidth,to:this.currentHp/this.hp*250,duration:200,onUpdate:e=>{this.hpBar.style.width=`${e.getValue()}px`}})}playerDied(){this.currentHp=this.hp,this.player.setPosition(Phaser.Math.Between(4e3,6e3),Phaser.Math.Between(6200,8e3)),this.currentHp=this.hp/3,this.smoothHpBarDecrease()}changeDirection(e){let t=[new Phaser.Math.Vector2(1,0),new Phaser.Math.Vector2(-1,0),new Phaser.Math.Vector2(0,1),new Phaser.Math.Vector2(0,-1),new Phaser.Math.Vector2(1,1).normalize(),new Phaser.Math.Vector2(-1,-1).normalize(),new Phaser.Math.Vector2(-1,1).normalize(),new Phaser.Math.Vector2(1,-1).normalize()];e.wanderDirection=Phaser.Utils.Array.GetRandom(t)}changeEnemiesDirection(){this.enemies.getChildren().forEach(e=>{this.changeDirection(e)})}spawnEnemies(e){for(let t=0;t<e;t++){let s=Phaser.Math.Between(4e3,6e3),i=Phaser.Math.Between(6200,8e3),a=Phaser.Math.Between(1,1e3),r,l,h,o,n,p;a<=750?(r="Nob",l="#1b1b1b",h=.5,o=1,p=1,n=1):a<=975?(r="Mythic",l="#1ce7eb",h=1.2,o=50,p=20,n=10):a<=999?(r="Ultra",l="#ff0084",h=2.5,o=1e4,p=100,n=100):(r="Super",l="#00ffb7",h=3,o=1e7,p=250,n=1e3);let d=this.physics.add.sprite(s,i,"enemy");d.setScale(.3*h),d.setDepth(1),d.rarity=r,d.body.setCircle(.37*d.width,.13*d.width,.13*d.height),d.damageMultiplier=p,d.body.setMass(n),d.wanderDirection=new Phaser.Math.Vector2(0,0),this.changeDirection(d);let $=this.add.sprite(d.x,d.y,"glow");$.setScale(.7*h),$.setTint(16776960),$.setDepth(0),this.tweens.add({targets:$,scale:{from:.15*h,to:.2*h},duration:2e3,yoyo:!0,repeat:-1}),d.glow=$,this.tweens.add({targets:d,angle:360,duration:3e4,repeat:-1}),d.healthBar=this.add.graphics(),d.healthBar.setDepth(2),d.currentHp=60*o,d.maxHp=60*o,d.damageDelt=20*p,d.rarityText=this.add.text(d.x,d.y-35,r,{fontSize:"25px",fill:l}),d.rarityText.setOrigin(.5),d.rarityText.setDepth(3),this.enemies.add(d)}}attemptSpawnEnemy(){1===Phaser.Math.Between(1,2)&&this.spawnEnemies(1)}getRarityMultiplier(e){switch(e){case"Nob":default:return 1;case"Mythic":return 5;case"Ultra":return 100;case"Super":return 250}}chasePlayer(e,t){}}let config={type:Phaser.AUTO,width:window.innerWidth,height:window.innerHeight,pixelArt:!0,scene:mainMap,physics:{default:"arcade",arcade:{fps:60,debug:!1}}},game=new Phaser.Game(config);export default mainMap;
